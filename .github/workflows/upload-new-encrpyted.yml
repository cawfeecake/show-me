---
name: Upload a copy of reference with new encryption
on:
  workflow_dispatch:
jobs:
  upload-new-encrypted:
    runs-on: ubuntu-latest
    steps:
      - name: generate new entropy
        id: entropy
        run: |
          size=42
          random=$(gpg --gen-random -a 2 $size)
          echo "::add-mask::$random"
          echo "::set-output name=generated::$random"

      #- name: upload entropy to GitHub Secrets store in repository
      #  run: |

      - uses: actions/checkout@v3
      
      - name: get decrypted root info, encrypt with new entropy, and then upload to repository
        env:
          NEW_ENCRYPTION_PASSWORD: ${{ steps.entropy.outputs.generated }}
          ROOT_FILE: secret_text.txt.gpg
          ROOT_KEY: ${{ secrets.ROOT_KEY }}
        run: |
          gpg --batch --decrypt --passphrase $ROOT_KEY --output decrypted.txt $ROOT_FILE

          # DEBUG
          cat decrypted.txt

          gpg -c --batch --passphrase $NEW_ENCRYPTION_PASSWORD --output new_encryption.txt.gpg decrypted.txt

          # DEBUG
          cat new_encryption.txt.gpg

          # TODO upload newly encrypted file to repository

      - name: send email with entropy used for new encryption
        shell: python
        env:
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          NEW_ENCRYPTION_PASSWORD: ${{ steps.entropy.outputs.generated }}
        run: |
          import os
          import smtplib, ssl

          ssl_context = ssl.create_default_context()

          with smtplib.SMTP_SSL('smtp.gmail.com', context=ssl_context) as server:
              sender_email = 'taylor.b.faubion@gmail.com'

              server.login(sender_email, os.environ.get('EMAIL_PASSWORD'))

              subject = 'Test subject!'
              text = f'''\
              Fixup!
              Password: {os.environ.get("NEW_ENCRYPTION_PASSWORD")}'''
              message  f'Subject: {subject}\n\n{text}'

              receiver_email = sender_email

              server.sendmail(sender_email, receiver_email, message)
